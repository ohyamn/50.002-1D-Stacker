module get_matrix (
    input clk,
    input stop_button,
    input reset_button,
    input pre_screen_matrix[10][6],
    output level_num_out[$clog2(10)],
    output current_screen_matrix[10][6]
  ){
    idle idle;
    win_or_lose win_or_lose;
    if_reset_button_pressed if_reset_button_pressed;
   
    .clk(clk){
      dff level_num [$clog2(10)](#INIT(0));
      dff current_row[16](#INIT(16b0));
      dff pre_row[16](#INIT(16b0));
    
      dff current_screen_matrix_mid[10][6](#INIT({b000111,6b0,6b0,6b0,6b0,6b0,6b0,6b0,6b0,b000111}));
    
      fsm state(#INIT(IDLE))={IDLE, INITIAL, SHIFT, CHECK_WIN_OR_LOSE, WIN, LOSE, OLD};
      
      dff reset_button_reg(#INIT(0));
      dff stop_button_reg(#INIT(0));
    
      get_next_state_of_current_row get_next_state_of_current_row;
      }

   always{
      if(stop_button_reg.q==b0 && stop_button==b1){
        stop_button_reg.d=b1;
      }
      if(reset_button_reg.q==b0 && reset_button==b1){
         reset_button_reg.d=b1;
      }    
    

    
      idle.idle=b0;
      win_or_lose.win_or_lose=b0;
    
      get_next_state_of_current_row.pre_row=pre_row.q;
      get_next_state_of_current_row.current_row=current_row.q;
      get_next_state_of_current_row.shift_or_check=b0;



      case(state.q){
       state.IDLE:
           idle.idle=1;
           current_screen_matrix_mid.d=idle.screen_matrix;
        
           current_screen_matrix=current_screen_matrix_mid.q;
        
           if(reset_button_reg.q==1){
              state.d = state.INITIAL;
            }else{ 
              state.d=state.IDLE;
            }
        
       state.INITIAL:
          current_screen_matrix_mid.d[9:1]=if_reset_button_pressed.screen_matrix;
          current_screen_matrix_mid.d[0]=b111100;
          

          current_row.d=c{10b0,b111100};
          
          current_screen_matrix=current_screen_matrix_mid.q;
        
          pre_row.d[5:0]=b101011;
        
          reset_button_reg.d=0;
          state.d=state.SHIFT;
        
        state.OLD:
          current_screen_matrix_mid.d=current_screen_matrix_mid.q;
          current_screen_matrix=current_screen_matrix_mid.q;
      
        
          current_row.d=c{10b0,current_screen_matrix_mid.q[level_num.q]};
          pre_row.d=pre_row.q;
        
          if(stop_button_reg.q==1){
             state.d=state.CHECK_WIN_OR_LOSE;
          }else if(reset_button_reg.q==b1){ 
             state.d=state.SHIFT;
             reset_button_reg.d=0;
          }else{
             state.d=state.OLD;
          }

      
        state.SHIFT:
          get_next_state_of_current_row.pre_row=pre_row.q;
          get_next_state_of_current_row.current_row=current_row.q;
          get_next_state_of_current_row.shift_or_check=b1;
        
          current_screen_matrix_mid.d[level_num.q]=get_next_state_of_current_row.next_state_of_current_row[5:0];
        
          current_row.d=c{10b0,current_screen_matrix_mid.q[level_num.q]};
        
          current_screen_matrix=current_screen_matrix_mid.q;
                
          if(level_num.q>1){
             pre_row.d[5:0]= pre_screen_matrix[level_num.q-1];
          }else{ 
              pre_row.d[5:0]=b101011;
          } //0011 1111 
        
        
          if(stop_button_reg.q==1){
             state.d=state.CHECK_WIN_OR_LOSE;
          }else if(reset_button_reg.q==1){ 
            state.d = state.INITIAL;
          }else{
            state.d=state.OLD;
          }
        
    
      state.CHECK_WIN_OR_LOSE:  
        get_next_state_of_current_row.pre_row=pre_row.q;
        get_next_state_of_current_row.current_row=current_row.q;
        get_next_state_of_current_row.shift_or_check=b0;
        
        current_screen_matrix_mid.d[level_num.q]=get_next_state_of_current_row.next_state_of_current_row[5:0];
           
        
        current_row.d=c{10b0,current_screen_matrix_mid.q[level_num.q]};

        stop_button_reg.d=0;
        level_num.d=level_num.q+1;

        if(current_row.q==16b0){
          state.d=state.LOSE;//why always this output
        }else if(level_num.q==10 && current_row.q!=16b0 ){
          state.d=state.WIN;
        }else if(reset_button_reg.q==1 && level_num.q!=1 && current_row.q!=16b0 ){
          state.d = state.INITIAL;
        }else{ 
          state.d=state.OLD;
        }
          

        current_screen_matrix=current_screen_matrix_mid.q;
        level_num_out=level_num.q;   
    
      state.WIN:
        win_or_lose.win_or_lose=1;
        current_screen_matrix_mid.d=win_or_lose.screen_matrix;
        if(reset_button_reg.q==1){
          state.d = state.INITIAL;
        }else{ 
          state.d=state.q;
        }
        current_screen_matrix=current_screen_matrix_mid.q;

    
      state.LOSE:
        win_or_lose.win_or_lose=0;
        current_screen_matrix_mid.d=win_or_lose.screen_matrix;
        if(reset_button_reg.q==1){
          state.d = state.INITIAL;
        }else{ 
          state.d=state.q;
        }
        current_screen_matrix=current_screen_matrix_mid.q;
    }
              
      current_screen_matrix=current_screen_matrix_mid.q;
      level_num_out=level_num.q;
      
  }
    
}


       


